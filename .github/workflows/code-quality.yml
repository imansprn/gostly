name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Check Go formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Go code is not formatted. Please run 'gofmt -s -w .'"
            gofmt -s -l .
            exit 1
          fi

      - name: Check Go imports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          if [ "$(goimports -l . | wc -l)" -gt 0 ]; then
            echo "Go imports are not organized. Please run 'goimports -w .'"
            goimports -l .
            exit 1
          fi

      - name: Run Go linter
        run: |
          go install golang.org/x/lint/golint@latest
          golint -set_exit_status ./...

      - name: Check Go mod tidy
        run: |
          go mod tidy
          if [ -n "$(git status --porcelain)" ]; then
            echo "go.mod or go.sum needs to be updated. Please run 'go mod tidy'"
            git status
            exit 1
          fi

      - name: Run frontend linting
        run: |
          cd frontend
          npm run lint

      - name: Check frontend formatting
        run: |
          cd frontend
          npm run format:check

      - name: Check TypeScript types
        run: |
          cd frontend
          npm run type-check

      - name: Run security checks
        run: |
          # Check for secrets in code
          if git grep -i "password\|secret\|key\|token" -- "*.go" "*.ts" "*.tsx" | grep -v "test\|example\|mock"; then
            echo "Potential secrets found in code"
            exit 1
          fi

      - name: Check file sizes
        run: |
          # Check for large files
          find . -type f -size +10M -not -path "./.git/*" -not -path "./build/*" -not -path "./node_modules/*" | head -10

  # Performance testing
  performance:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run Go benchmarks
        run: |
          go test -bench=. -benchmem ./...

      - name: Check build time
        run: |
          time wails build
