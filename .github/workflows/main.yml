name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  GO_VERSION: '1.23'

jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: TypeScript type-check
        run: npm run type-check

      - name: ESLint
        run: npm run lint

      - name: Unit tests
        run: npm test --silent || npm test --silent -- --run

      - name: Coverage (Vitest)
        run: npm run test:coverage

      - name: Upload Codecov (frontend)
        if: ${{ env.ACT != 'true' }}
        uses: codecov/codecov-action@v4
        with:
          files: frontend/coverage/coverage-final.json
          flags: frontend
          fail_ci_if_error: false

      - name: Build
        run: npm run build

      - name: Upload frontend dist
        if: ${{ env.ACT != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
          if-no-files-found: error

  backend:
    name: Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Go mod download
        run: go mod download

      - name: GolangCI-Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61.0
          args: --timeout=3m

      - name: Go tests
        run: |
          if find . -name "*_test.go" | grep -q .; then
            go test -v -race -coverprofile=coverage.out ./...
          else
            echo "mode: set" > coverage.out
          fi

      - name: Upload Codecov (backend)
        if: ${{ env.ACT != 'true' }}
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: backend
          fail_ci_if_error: false

  # Release workflow is now handled separately in .github/workflows/release.yml
  # This allows for manual releases and better control over the release process
